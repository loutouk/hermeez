package boursier.louis.hermeez.backend;

import boursier.louis.hermeez.backend.entities.User;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.access.prepost.PreAuthorize;
import org.springframework.security.oauth2.provider.OAuth2Authentication;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import java.util.List;

/**
 * Matches specified urls to manually defined functions in the service class {@link boursier.louis.hermeez.backend.CustomizedUserService}.
 * Urls auto generated by MongoRepository for CRUD on entity object do not appear here. See {@link boursier.louis.hermeez.backend.UserRepository}.
 */

// TODO remove logic from controller

@RestController
public class Controller {

    @Autowired
    private UserRepository repository;

    @Autowired
    private CustomizedUserService userService;

    @GetMapping(path = "/findByLastNameAndFirstName")
    public List<User> findByNameAndFirstName(@RequestParam(value = "lastName") String lastName,
                                             @RequestParam(value = "firstName") String firstName) {
        return userService.findByNameAndFirstName(lastName, firstName);
    }

    @GetMapping("/forpremium")
    @PreAuthorize("hasAuthority('PREMIUM')")
    String forPremium(@RequestParam String email, OAuth2Authentication authentication) {
        return "For premium only.";
    }

    @GetMapping("/foruser")
    @PreAuthorize("hasAuthority('USER') || hasAuthority('PREMIUM')")
    String forUser() {
        return "For all users.";
    }

    @PostMapping("/updatetopremium")
    @PreAuthorize("hasAuthority('USER') || !hasAuthority('PREMIUM')")
    String updateToPremium(@RequestParam(value = "email") String email) {
        User user = repository.findByEmail(email);
        user.setRole(User.Role.PREMIUM);
        repository.save(user);
        return "Role updated to premium.";
    }

    @GetMapping("/test")
    String test() {
        return "Test.";
    }
}
